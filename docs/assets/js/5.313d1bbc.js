(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{289:function(t,a,e){t.exports=e.p+"assets/img/1674957119849.8fbbad2b.png"},290:function(t,a,e){t.exports=e.p+"assets/img/1674959056101.fa1e0349.png"},291:function(t,a,e){t.exports=e.p+"assets/img/1674959263825.8f240cd8.png"},328:function(t,a,e){"use strict";e.r(a);var s=e(8),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("custom-header"),t._v(" "),a("h2",{attrs:{id:"map-结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-结构"}},[t._v("#")]),t._v(" Map 结构")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 介绍"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Map` 类似于对象，但是键名不限于 String 和 Symbol 两种类型，它的 key 可以是任意类型，结构优于传统的对象。")]),t._v(" "),a("p",[t._v("如下：map 使用 Object 作为 key")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:e(289),alt:"1674957119849"}})]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("Map 和 Object 的比较")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}}),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Map")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("Object")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("意外的键")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Map")]),t._v(" 默认情况不包含任何键。只包含显式插入的键。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个 "),a("code",[t._v("Object")]),t._v(" 有一个原型，原型链上的键名有可能和你自己在对象上的设置的键名产生冲突。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("键的类型")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个 "),a("code",[t._v("Map")]),t._v(" 的键可以是"),a("strong",[t._v("任意值")]),t._v("，包括函数、对象或任意基本类型。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一个 "),a("code",[t._v("Object")]),t._v(" 的键必须是一个 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("String")]),a("OutboundLink")],1),t._v(" 或是 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Symbol")]),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("键的顺序")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Map")]),t._v(" 中的键是有序的。因此，当迭代的时候，一个 "),a("code",[t._v("Map")]),t._v(" 对象以插入的顺序返回键值。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("虽然 "),a("code",[t._v("Object")]),t._v(" 的键目前是有序的，但并不总是这样，而且这个顺序是复杂的。因此，最好不要依赖属性的顺序。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Size")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Map")]),t._v(" 的键值对个数可以轻易地通过 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/size",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("size")]),a("OutboundLink")],1),t._v(" 属性获取。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Object")]),t._v(" 的键值对个数只能手动计算。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("迭代")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Map")]),t._v(" 是 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols",target:"_blank",rel:"noopener noreferrer"}},[t._v("可迭代的"),a("OutboundLink")],1),t._v(" 的，所以可以直接被迭代。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("Object")]),t._v(" 没有实现 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("迭代协议"),a("OutboundLink")],1),t._v("，所以使用 JavaSctipt 的 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...of",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...of"),a("OutboundLink")],1),t._v(" 表达式并不能直接迭代对象。**备注：**对象可以实现迭代协议，或者你可以使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/keys",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Object.keys")]),a("OutboundLink")],1),t._v(" 或 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/entries",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Object.entries")]),a("OutboundLink")],1),t._v("。"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/for...in",target:"_blank",rel:"noopener noreferrer"}},[t._v("for...in"),a("OutboundLink")],1),t._v(" 表达式允许你迭代一个对象的"),a("em",[t._v("可枚举")]),t._v("属性。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("性能")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在频繁增删键值对的场景下表现更好。")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在频繁添加和删除键值对的场景下未作出优化。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("序列化和解析")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("没有元素的序列化和解析的支持。（但是你可以使用携带 "),a("em",[t._v("replacer")]),t._v(" 参数的 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("JSON.stringify()")]),a("OutboundLink")],1),t._v(" 创建一个自己的对 "),a("code",[t._v("Map")]),t._v(" 的序列化和解析支持。参见 Stack Overflow 上的提问："),a("a",{attrs:{href:"https://stackoverflow.com/q/29085197/",target:"_blank",rel:"noopener noreferrer"}},[t._v("How do you JSON.stringify an ES6 Map?"),a("OutboundLink")],1),t._v("）")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("原生的由 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Object")]),a("OutboundLink")],1),t._v(" 到 JSON 的序列化支持，使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("JSON.stringify()")]),a("OutboundLink")],1),t._v("。原生的由 JSON 到 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Object")]),a("OutboundLink")],1),t._v(" 的解析支持，使用 "),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("JSON.parse()")]),a("OutboundLink")],1),t._v("。")])])])])]),t._v(" "),a("h3",{attrs:{id:"map-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-的特点"}},[t._v("#")]),t._v(" Map 的特点")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Map 默认情况下不包含任何键，所有键都是自己添加进去的。不同于 Object 原型链上有一些默认的键。")])]),t._v(" "),a("li",[a("p",[t._v("Map 的键可以是"),a("strong",[t._v("任意类型")]),t._v("数据，就连函数都可以。")])]),t._v(" "),a("li",[a("p",[t._v("Map 的键值对个数可以"),a("strong",[t._v("轻易")]),t._v("通过"),a("code",[t._v("size")]),t._v("属性获取，Object 需要手动计算。")])]),t._v(" "),a("li",[a("p",[t._v("Map 在频繁增删键值对的场景下"),a("strong",[t._v("性能")]),t._v("要比 Object 好。")])])]),t._v(" "),a("h3",{attrs:{id:"什么时候用-map"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候用-map"}},[t._v("#")]),t._v(" 什么时候用 Map")]),t._v(" "),a("ol",[a("li",[t._v("要添加的键值名和 Object 上的默认键值名冲突，又不想改名时，"),a("strong",[t._v("用 Map")])]),t._v(" "),a("li",[t._v("需要 String 和 Symbol 以外的数据类型做键值时，"),a("strong",[t._v("用 Map")])]),t._v(" "),a("li",[t._v("键值对很多，有需要计算数量时，"),a("strong",[t._v("用 Map")])]),t._v(" "),a("li",[t._v("需要频繁增删键值对时，"),a("strong",[t._v("用 Map")])])]),t._v(" "),a("h2",{attrs:{id:"什么是-weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-weakmap"}},[t._v("#")]),t._v(" 什么是 WeakMap")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN 介绍"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("WeakMap")]),t._v("是 ES6 中新增的一种集合类型，叫做“弱映射”。它和"),a("code",[t._v("Map")]),t._v("是兄弟关系，与"),a("code",[t._v("Map")]),t._v("的区别就在于这个"),a("strong",[t._v("弱字")]),t._v("，API 还是"),a("code",[t._v("Map")]),t._v("的那套（只有"),a("code",[t._v("set")]),t._v(" "),a("code",[t._v("get")]),t._v(" "),a("code",[t._v("has")]),t._v(" "),a("code",[t._v("delete")]),t._v(")")]),t._v(" "),a("h3",{attrs:{id:"weakmap-的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-的特点"}},[t._v("#")]),t._v(" WeakMap 的特点")]),t._v(" "),a("p",[t._v("只接受对象作为键名（"),a("code",[t._v("null")]),t._v(" 除外），不接受其他类型的值作为键名；")]),t._v(" "),a("h3",{attrs:{id:"weakmap-的键名引用的对象是弱引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-的键名引用的对象是弱引用"}},[t._v("#")]),t._v(" WeakMap 的键名引用的对象是弱引用")]),t._v(" "),a("p",[t._v("这是"),a("code",[t._v("WeakMap")]),t._v("结构的关键所在")]),t._v(" "),a("h4",{attrs:{id:"什么是强引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是强引用"}},[t._v("#")]),t._v(" 什么是强引用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("d")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是obj1对象"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("obj2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是obj2对象"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("obj1 和 obj2 是两个对象，通过 arr 数组对这两个对象添加一些文字说明，这样就形成了 arr 对 obj1 和 obj2 的应用，这种应用就是"),a("code",[t._v("强引用")]),t._v("，当我们不需要这个对象时候，还需要手动的删除这个引用，解除 arr 对这两个对象的引用，否则垃圾回收机制不会释放这两个对象占用的内存。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"什么是弱引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是弱引用"}},[t._v("#")]),t._v(" 什么是弱引用")]),t._v(" "),a("p",[t._v("创建一个弱引用对象")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h4",{attrs:{id:"图解强引用和弱引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图解强引用和弱引用"}},[t._v("#")]),t._v(" 图解强引用和弱引用")]),t._v(" "),a("p",[t._v("强引用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"引用了obj1对象"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:e(290),alt:"1674959056101"}})]),t._v(" "),a("p",[t._v("从上图可以看出，obj1 这个对象被引用了两次，因此引用计数为 2。")]),t._v(" "),a("p",[t._v("弱引用：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" weakMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nweakMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"引用了obj1对象"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:e(291),alt:"1674959263825"}})]),t._v(" "),a("p",[t._v("从上图可以看出，obj1 被引用了 1 次，引用计数为 1.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("如果强引用数据被删除时候，我们需要手动的解除引用，而弱引用可以直接等待垃圾回收机制自动清除。")]),t._v(" "),a("p",[t._v("当"),a("code",[t._v("obj1 = null")]),t._v("时会解除 obj1 对原数据的引用；")]),t._v(" "),a("p",[t._v("weakMap 实例对象对 obj1 所引用的对象是"),a("code",[t._v("弱引用关系")]),t._v("，该数据的引用计数就是 0，因此会被垃圾回收机制清除；")]),t._v(" "),a("p",[t._v("map 实例对象是对 obj1 所引用的对象是"),a("code",[t._v("强引用关系")]),t._v("，该数据的引用计数是 1， 因此不会被垃圾回收机制清除。")])]),t._v(" "),a("h3",{attrs:{id:"weakmap-的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap-的应用场景"}},[t._v("#")]),t._v(" WeakMap 的应用场景")]),t._v(" "),a("h4",{attrs:{id:"_1-dom-节点元数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-dom-节点元数据"}},[t._v("#")]),t._v(" 1. DOM 节点元数据")]),t._v(" "),a("p",[t._v("因为 weakMap 不会影响垃圾回收，所以可以用来关联元数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/733e38dd1b114563a43e04e8f51a9068~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"image-20210725171056590"}})]),t._v(" "),a("p",[t._v("当上面代码执行后，登录按钮从 DOM 树中被删除了，但由于 Map 对节点对象是强引用关系，仍然保存着对按钮的引用，所以会引起内存泄漏")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4f50f0747e5743cdbecb63d83ea47aed~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"image-20210725171352098"}})]),t._v(" "),a("p",[t._v("因此可以采用"),a("code",[t._v("WeakMap")]),t._v("当节点删除后，引用计数为 0，等待垃圾回收机制回收")]),t._v(" "),a("h4",{attrs:{id:"_2-部署私有属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-部署私有属性"}},[t._v("#")]),t._v(" 2. 部署私有属性")]),t._v(" "),a("p",[t._v("利用弱映射，将内部属性设置为实例的弱引用对象，当实例删除时，私有属性也会随之消失，因此不会内存泄漏")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9843042808ba4d888d838f9a434e35ed~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"image-20210725172559971"}})]),t._v(" "),a("h4",{attrs:{id:"_3-数据缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数据缓存"}},[t._v("#")]),t._v(" 3. 数据缓存")]),t._v(" "),a("p",[t._v("当我们需要在不修改原有对象的情况下储存某些属性等，而又不想管理这些数据时，可以使用"),a("code",[t._v("WeakMap")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b77c6e9beef643bd840b59ae4626db5e~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.awebp",alt:"image-20210725173257029"}})]),t._v(" "),a("h2",{attrs:{id:"map-和-weakmap-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-和-weakmap-的区别"}},[t._v("#")]),t._v(" Map 和 WeakMap 的区别")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("Map")]),t._v(" 的键可以是任意类型，"),a("code",[t._v("WeakMap")]),t._v(" 只接受对象作为键（null 除外），不接受其他类型的值作为键")]),t._v(" "),a("li",[a("code",[t._v("Map")]),t._v(" 的键实际上是跟内存地址绑定的，只要内存地址不一样，就视为两个键； "),a("code",[t._v("WeakMap")]),t._v(" 的键是弱引用，键所指向的对象可以被垃圾回收，此时键是无效的")]),t._v(" "),a("li",[a("code",[t._v("Map")]),t._v("可以被遍历， "),a("code",[t._v("WeakMap")]),t._v(" 不能被遍历")])]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("原文地址：https://juejin.cn/post/6993101968545677319")])])],1)}),[],!1,null,null,null);a.default=r.exports}}]);