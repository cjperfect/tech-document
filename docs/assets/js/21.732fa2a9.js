(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{315:function(t,e,s){"use strict";s.r(e);var v=s(11),a=Object(v.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("custom-header"),t._v(" "),e("h2",{attrs:{id:"ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),e("p",[t._v("Ajax 即“AsynchronousJavascriptAndXML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。它是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。")]),t._v(" "),e("h2",{attrs:{id:"fetch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fetch"}},[t._v("#")]),t._v(" Fetch")]),t._v(" "),e("p",[t._v("Fetch 是 AJAX 的替代品，是在 ES6 出现的，使用了 ES6 中的 promise 对象。Fetch 是基于 promise 设计的。Fetch 的代码结构比起 ajax 简单多。fetch 不是 ajax 的进一步封装，而是原生 js，没有使用 XMLHttpRequest 对象。")]),t._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[t._v("Fetch 的优缺点")]),t._v(" "),e("p",[t._v("fetch 的优点：")]),t._v(" "),e("ul",[e("li",[t._v("语法简洁，更加语义化")]),t._v(" "),e("li",[t._v("基于标准 Promise 实现，支持 async/await")]),t._v(" "),e("li",[t._v("更加底层，提供的 API 丰富（request, response）")]),t._v(" "),e("li",[t._v("脱离了 XHR，是 ES 规范里新的实现方式")])]),t._v(" "),e("p",[t._v("fetch 的缺点：")]),t._v(" "),e("ul",[e("li",[t._v("fetch 只对网络请求报错，对 400，500 都当做成功的请求，服务器返回 400，500 错误码时并不会 reject，只有网络错误这些导致请求不能完成时，fetch 才会被 reject。")]),t._v(" "),e("li",[t._v("fetch 默认不会带 cookie，需要添加配置项： fetch(url, {credentials: 'include'})")]),t._v(" "),e("li",[t._v("fetch 不支持 abort，不支持超时控制，使用 setTimeout 及 Promise.reject 的实现的超时控制并不能阻止请求过程继续在后台运行，造成了流量的浪费")]),t._v(" "),e("li",[t._v("fetch 没有办法原生监测请求的进度，而 XHR 可以")])])]),t._v(" "),e("h2",{attrs:{id:"axios"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#axios"}},[t._v("#")]),t._v(" Axios")]),t._v(" "),e("p",[t._v("Axios 是一种基于 Promise 封装的 HTTP 客户端")]),t._v(" "),e("p",[t._v("特点：")]),t._v(" "),e("ul",[e("li",[t._v("浏览器端发起 XMLHttpRequests 请求")]),t._v(" "),e("li",[t._v("node 端发起 http 请求")]),t._v(" "),e("li",[t._v("支持 Promise API")]),t._v(" "),e("li",[t._v("监听请求和返回")]),t._v(" "),e("li",[t._v("对请求和返回进行转化")]),t._v(" "),e("li",[t._v("取消请求")]),t._v(" "),e("li",[t._v("自动转换 json 数据")]),t._v(" "),e("li",[t._v("客户端支持抵御 XSRF 攻击")])])],1)}),[],!1,null,null,null);e.default=a.exports}}]);