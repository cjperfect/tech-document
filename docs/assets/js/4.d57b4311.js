(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{297:function(t,e,v){t.exports=v.p+"assets/img/1677586449654.4b252cff.png"},298:function(t,e,v){t.exports=v.p+"assets/img/1677587038622.06698b6e.png"},299:function(t,e,v){t.exports=v.p+"assets/img/2.098467ac.gif"},300:function(t,e,v){t.exports=v.p+"assets/img/1677587803433.52bcb65a.png"},350:function(t,e,v){"use strict";v.r(e);var _=v(11),a=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("custom-header"),t._v(" "),e("h2",{attrs:{id:"老版-react-架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#老版-react-架构"}},[t._v("#")]),t._v(" 老版 React 架构")]),t._v(" "),e("p",[t._v("React 16 之前的架构")]),t._v(" "),e("p",[t._v("其实就分为两个部分：")]),t._v(" "),e("ul",[e("li",[t._v("Reconciler 协调器")]),t._v(" "),e("li",[t._v("Render 渲染器")])]),t._v(" "),e("p",[e("code",[t._v("Reconciler协调器")]),t._v("负责本次更新有什么组件需要被渲染，diff 算法就发生在这个步骤中，在 diff 算法中会将上次更新的组件和本次更新的组件做一个对比，判定出本次需要更新的组件会交给"),e("code",[t._v("Render（渲染器）")]),t._v("渲染到视图中，不同的渲染器会将组件渲染到不同的宿主环境的视图中。")]),t._v(" "),e("p",[e("img",{attrs:{src:v(297),alt:"1677586449654"}})]),t._v(" "),e("h2",{attrs:{id:"新版-react-架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新版-react-架构"}},[t._v("#")]),t._v(" 新版 React 架构")]),t._v(" "),e("p",[t._v("分为三大部分：")]),t._v(" "),e("ul",[e("li",[t._v("Scheduler 调度器")]),t._v(" "),e("li",[t._v("Reconciler 协调器")]),t._v(" "),e("li",[t._v("Render 渲染器")])]),t._v(" "),e("p",[t._v("在新的架构中，更新首先会被"),e("code",[t._v("调度器")]),t._v("处理，"),e("code",[t._v("调度器")]),t._v("会调度这些更新的优先级，更高优的更新会首先进入"),e("code",[t._v("协调器")]),t._v("，在"),e("code",[t._v("协调器")]),t._v("正在进行 diff 算法时，如果出现更高优先级的更新，那么正在协调的更新会被中断，由于"),e("code",[t._v("调度器")]),t._v("和"),e("code",[t._v("协调器")]),t._v("的工作都是在内存中工作，不会执行具体的视图操作，因此出现了中断发生，用户也不会看到更新不完全的视图。当某次更新完成了在"),e("code",[t._v("协调器")]),t._v("中的工作时，"),e("code",[t._v("协调器")]),t._v("会通知"),e("code",[t._v("渲染器")]),t._v("本次更新有哪些组件需要执行对应的视图操作，最后由"),e("code",[t._v("渲染器")]),t._v("来执行这些视图操作，后面就是重复执行整个流程。")]),t._v(" "),e("p",[e("img",{attrs:{src:v(298),alt:"1677587038622"}})]),t._v(" "),e("h2",{attrs:{id:"解析新版-react-架构的示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解析新版-react-架构的示例"}},[t._v("#")]),t._v(" 解析新版 React 架构的示例")]),t._v(" "),e("p",[t._v("代码很简单，就是点击一个按钮让每个数字乘法运算，最终效果如下：")]),t._v(" "),e("ul",[e("li",[t._v("1 -> 2")]),t._v(" "),e("li",[t._v("2 -> 4")]),t._v(" "),e("li",[t._v("3 -> 6")])]),t._v(" "),e("p",[e("img",{attrs:{src:v(299),alt:"2"}})]),t._v(" "),e("h3",{attrs:{id:"分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[t._v("#")]),t._v(" 分析")]),t._v(" "),e("p",[e("img",{attrs:{src:v(300),alt:"1677587803433"}})])],1)}),[],!1,null,null,null);e.default=a.exports}}]);